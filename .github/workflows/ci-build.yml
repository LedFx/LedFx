name: CI Build LedFx

on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'frontend/**'
      - 'docs/**'
      - 'ledfx_frontend/**'
  schedule:
    - cron: '0 8 * * *'
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-ledfx-linux:
    name: Build LedFx (Ubuntu)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
      fail-fast: false
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v5

      - name: Install build dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y \
          gcc libatlas3-base portaudio19-dev
      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}

      - name: Install LedFx
        run: |
          export CFLAGS="-Wno-incompatible-function-pointer-types"
          uv sync --all-extras --dev
      - name: Setup CI sound system
        uses: LABSN/sound-ci-helpers@v1

      - name: Create Audio Input
        run: |
          pactl load-module module-null-sink sink_name=LedFx_Test_Source sink_properties=device.description=LedFx_Test_Source

      - name: Run Tests
        run: |
          uv run pytest -v

      - name: Attach LedFx test log
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ledfx-log-${{ runner.os }}-${{ runner.arch }}-py${{ matrix.python-version }}.log
          path: ${{ github.workspace }}/debug_config/ledfx.log

  build-ledfx-windows:
    name: Build LedFx (Windows)
    runs-on: windows-2022   # this is pinned until we understand why the new 2025 latest has audio device issues
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
      fail-fast: false
    defaults:
      run:
        shell: bash -x {0}
    steps:
      - name: Enable long paths for git on Windows
        run: git config --system core.longpaths true
      - name: Setup CI sound system
        uses: LABSN/sound-ci-helpers@v1
      - name: Check out code from GitHub
        uses: actions/checkout@v5
      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}

      - name: Install LedFx
        run: |
          uv sync --all-extras --dev

      - name: Setup CI sound system
        uses: LABSN/sound-ci-helpers@v1

      - name: Check LedFx launches
        run: |
          uv run ledfx --ci-smoke-test -vv -c debug_config --offline

      - name: Run Tests
        run: |
          uv run -vv pytest -v
      - name: Attach LedFx test log
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ledfx-log-${{ runner.os }}-${{ runner.arch }}-py${{ matrix.python-version }}.log
          path: ${{ github.workspace }}/debug_config/ledfx.log

  build-ledfx-osx:
    name: Build LedFx (OS X)
    runs-on: macos-15-intel
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
      fail-fast: false
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v5

      - name: Install build dependencies
        run: |
          brew install portaudio mbedtls@2

      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}

      - name: Install LedFx
        run: |
            export PATH="/opt/homebrew/opt/mbedtls@2/bin:$PATH"
            export LDFLAGS="-L/opt/homebrew/opt/mbedtls@2/lib"
            export CPPFLAGS="-I/opt/homebrew/opt/mbedtls@2/include"
            export CFLAGS="-Wno-incompatible-function-pointer-types"
            uv sync --all-extras --dev

      - name: Check LedFx launches
        run: |
          uv run ledfx --ci-smoke-test -vv -c debug_config --offline
      - name: Attach LedFx test log
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ledfx-log-${{ runner.os }}-${{ runner.arch }}-py${{ matrix.python-version }}.log
          path: ${{ github.workspace }}/debug_config/ledfx.log

  build-ledfx-osx-m1:
    name: Build LedFx (OS X) (Apple Silicon)
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
      fail-fast: false
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v5

      - name: Install build dependencies
        run: |
          brew install portaudio mbedtls@2

      # NEW step to fix samplerate build on Python 3.10 with CMake 4.x
      - name: Set CMake policy minimum
        run: echo "CMAKE_POLICY_VERSION_MINIMUM=3.5" >> "$GITHUB_ENV"

      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}

      - name: Install LedFx
        run: |
            export PATH="/opt/homebrew/opt/mbedtls@2/bin:$PATH"
            export LDFLAGS="-L/opt/homebrew/opt/mbedtls@2/lib"
            export CPPFLAGS="-I/opt/homebrew/opt/mbedtls@2/include"
            export CFLAGS="-Wno-incompatible-function-pointer-types"
            uv sync --all-extras --dev
      - name: Check LedFx launches
        run: |
          uv run ledfx --ci-smoke-test -vv -c debug_config --offline
      - name: Attach LedFx test log
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ledfx-log-${{ runner.os }}-${{ runner.arch }}-py${{ matrix.python-version }}.log
          path: ${{ github.workspace }}/debug_config/ledfx.log

  build-ledfx-docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ARCH: ["amd64", "arm64"]
      fail-fast: false
    env:
      IMAGE_NAME: ledfx
      GHCR_IMAGE: "" # avoid linting issues
    name: Build LedFx Docker Image for ${{ matrix.ARCH }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Set up QEMU (emulation)
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Lowercase repository owner
        id: repo
        run: |
          echo "GHCR_IMAGE=ghcr.io/${GITHUB_REPOSITORY_OWNER,,}/${{ env.IMAGE_NAME }}" >> $GITHUB_ENV
      - name: Build and run for ${{ matrix.ARCH }}
        uses: docker/build-push-action@v6
        with:
          context: ./
          file: ./ledfx_docker/Dockerfile
          platforms: linux/${{ matrix.ARCH }}
          load: true
          push: false
          tags: "${{ env.IMAGE_NAME }}:${{ matrix.ARCH }}"
          cache-from: type=registry,ref=${{ env.GHCR_IMAGE }}:cache-${{ matrix.ARCH }}
          build-args: |
            GITHUB_SHA=${{ github.sha }}
            IS_RELEASE=${{ startsWith(github.ref, 'refs/tags/') }}
      - name: Run ci-smoke-test
        run: |
          docker run --name ledfx-run-${{ matrix.ARCH }} ${{ env.IMAGE_NAME }}:${{ matrix.ARCH }} --ci-smoke-test -vv -c debug_config --offline
      - name: Copy log file from container to workspace
        run: |
          docker cp ledfx-run-${{ matrix.ARCH }}:/home/ledfx/debug_config/ledfx.log ${{ github.workspace }}/ledfx.log
          docker rm ledfx-run-${{ matrix.ARCH }} || echo "Container ledfx-run already removed"
      - name: Attach LedFx test log
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ledfx-log-${{ runner.os }}-${{ env.IMAGE_NAME }}-${{ matrix.ARCH }}-docker.log
          path: ${{ github.workspace }}/ledfx.log