name: CI Build LedFx (Apple Silicon)

on:
  workflow_dispatch:

jobs:

  build-ledfx-osx:
    name: Build LedFx (OS X) (Apple Silicon)
    runs-on: flyci-macos-large-latest-m1
    strategy:
      matrix:
        python: [3.10.x,3.11.x,3.12.x]
      fail-fast: false
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          brew install portaudio

      - name: Setup Python ${{ matrix.python }}
        id: python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Get full Python version
        id: full-python-version
        run: echo version=$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))") >> $GITHUB_OUTPUT

      - name: Install poetry
        run: |
          curl -sSL https://install.python-poetry.org | python - -y

      - name: Update PATH
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Configure poetry
        run: poetry config virtualenvs.in-project true

      - name: Set up cache
        uses: actions/cache@v4
        id: cache
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ runner.arch }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Ensure cache is healthy
        if: steps.cache.outputs.cache-hit == 'true'
        run: |
          # `timeout` is not available on macOS, so we define a custom function.
          [ "$(command -v timeout)" ] || function timeout() { perl -e 'alarm shift; exec @ARGV' "$@"; }

          # Using `timeout` is a safeguard against the Poetry command hanging for some reason.
          timeout 10s poetry run pip --version || rm -rf .venv

      - name: Check lock file
        run: poetry check --lock

      - name: Build a binary wheel
        run: |
          poetry build

      - name: Install LedFx
        run: |
          poetry install --with dev

      - name: Check LedFx launches
        run: |
          poetry run ledfx --ci-smoke-test -vv -c debug_config
      - name: Attach LedFx test log
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ledfx-log-osx-arm64-${{ matrix.python }}.log
          path: ${{ github.workspace }}/debug_config/LedFx.log


