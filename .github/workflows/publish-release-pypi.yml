name: Publish Python distributions to PyPI

on:
  release:
    types:
      - published

  workflow_dispatch:

env:
  DEFAULT_PYTHON: 3.12

jobs:
  build-test-wheel-and-sdist:
    name: Build LedFx wheel/sdist
    runs-on: ubuntu-latest
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v4
      - name: Set up Python ${{ env.DEFAULT_PYTHON }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
      - name: Create prod.env
        run: |
          echo "IS_RELEASE = true" >> prod.env
      - name: Build a binary wheel and source tarball
        run: |
          poetry build
      - name: Package the wheel
        uses: actions/upload-artifact@v4
        with:
          name: LedFx-wheel
          path: dist/ledfx-*.whl
      - name: Package the sdist
        uses: actions/upload-artifact@v4
        with:
          name: LedFx-sdist
          path: dist/ledfx-*.tar.gz
  install-from-wheel:
    name: Install the LedFx wheel
    runs-on: ubuntu-latest
    needs: [build-test-wheel-and-sdist]
    steps:
      - name: Get the wheel from the previous job
        uses: actions/download-artifact@v4
        with:
          name: LedFx-wheel
      - name: Set up Python ${{ env.DEFAULT_PYTHON }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}
      - name: Install the wheel
        run: |
          pip install ledfx-*.whl
      - name: Run LedFx
        run: |
          ledfx --ci-smoke-test -vv
  install-from-sdist:
    name: Install the LedFx sdist
    runs-on: ubuntu-latest
    needs: [build-test-wheel-and-sdist]
    steps:
      - name: Get the wheel from the previous job
        uses: actions/download-artifact@v4
        with:
          name: LedFx-sdist
      - name: Set up Python ${{ env.DEFAULT_PYTHON }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}
      - name: Install the wheel
        run: |
          pip install ledfx-*.tar.gz
      - name: Run LedFx
        run: |
          ledfx --ci-smoke-test -vv
  publish:
    name: Publish Python distributions to PyPI
    needs: [install-from-wheel, install-from-sdist]
    runs-on: ubuntu-latest
    steps:
      - name: Get the wheel from the previous job
        uses: actions/download-artifact@v4
        with:
          name: LedFx-wheel
      - name: Get the source tarball from the previous job
        uses: actions/download-artifact@v4
        with:
          name: LedFx-sdist
      - name: Move the wheel and source tarball to the root directory
        run: |
          mv ledfx-*.whl /dist/ledfx-*.whl
          mv ledfx-*.tar.gz /dist/ledfx-*.tar.gz
      - name: Publish distribution to Test PyPI
        if: github.event_name == 'workflow_dispatch'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TEST_API_TOKEN }}
          repository-url: https://test.pypi.org/legacy/
      - name: Publish distribution to PyPI
        if: github.event_name == 'release' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
      # - name: Trigger HomeAssistant Add-on
      #   uses: benc-uk/workflow-dispatch@v1
      #   with:
      #     workflow: Builder
      #     repo: YeonV/home-assistant-addons
      #     ref: refs/heads/master
      #     token: ${{ secrets.LEDFX_HOMEASSISTANT_ADDON }}
      #     inputs: '{ "version": "${{ github.ref_name }}" }'
