{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Cleanup Debug Config Folder",
            "detail": "Remove the debug_config folder to ensure a clean start",
            "type": "shell",
            "command": "rm -rf ${workspaceFolder}/debug_config",
            "problemMatcher": [],
            "presentation": {
                "reveal": "silent",
                "focus": false,
                "close": true
            },
            "windows": {
                "command": "Remove-Item -Recurse -Force '${workspaceFolder}\\debug_config'"
            },
            "options": {
                "statusbar": {
                    "hide": true
                }
            }
        },
        {
            "label": "Build Docs",
            "type": "shell",
            "command": "uv",
            "args": ["run", "sphinx-build","-a", "-b", "html", ".", "build"],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "options": {
                "cwd": "${workspaceFolder}/docs",
                "statusbar": {
                    "hide": true
                }
            },
            "problemMatcher": [],
            "dependsOn": "Install Docs Dependencies"
        },
        {
            "label": "Install Docs Dependencies",
            "type": "shell",
            "command": "uv",
            "args": ["sync", "--group", "docs"],
            "options": {
                "cwd": "${workspaceFolder}",
                "statusbar": {
                    "hide": true
                }
            },
            "problemMatcher": []
        },
        {
            "label": "Build and Open Docs",
            "type": "shell",
            "command": "cmd",
            "args": ["/c", "start", "${workspaceFolder}/docs/build/index.html"],
            "windows": {
                "command": "cmd",
                "args": ["/c", "start", "${workspaceFolder}\\docs\\build\\index.html"]
            },
            "linux": {
                "command": "xdg-open",
                "args": ["${workspaceFolder}/docs/build/index.html"]
            },
            "osx": {
                "command": "open",
                "args": ["${workspaceFolder}/docs/build/index.html"]
            },
            "problemMatcher": [],
            "dependsOn": "Build Docs"
        },
        {
            "label": "Init Frontend submodule",
            "type": "shell",
            "command": "git",
            "args": ["pull", "--recurse-submodules"],
            "options": {
                "cwd": "${workspaceFolder}",
                "statusbar": {
                    "hide": true
                }
            },
            "problemMatcher": []
        },
        {
            "label": "Build Rust Effects",
            "detail": "Build Rust effects with automatic Rust installation and testing",
            "type": "shell",
            "command": "${workspaceFolder}/.vscode/build-rust-auto.cmd",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": [
                {
                    "pattern": [
                        {
                            "regexp": "^error\\[(.*)\\]:\\s+(.*)$",
                            "severity": 1,
                            "message": 2,
                            "code": 1
                        }
                    ]
                }
            ],
            "windows": {
                "command": "${workspaceFolder}\\.vscode\\build-rust-auto.cmd"
            },
            "linux": {
                "command": "bash",
                "args": [
                    "-c",
                    "if ! command -v rustc &> /dev/null; then echo 'Installing Rust...'; curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y; source ~/.cargo/env; fi; cd '${workspaceFolder}/ledfx/effects/rust_effects' && uv run --with maturin maturin develop --release"
                ]
            },
            "osx": {
                "command": "bash",
                "args": [
                    "-c",
                    "if ! command -v rustc &> /dev/null; then echo 'Installing Rust...'; curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y; source ~/.cargo/env; fi; cd '${workspaceFolder}/ledfx/effects/rust_effects' && uv run --with maturin maturin develop --release"
                ]
            }
        }
    ]
}
